import copy
import os
import string
import subprocess

Import('env')

#######################################################
# Setup toolchain
#######################################################
env['PLATFORM'] = 'posix'
env.Tool('default')

#######################################################
# Build variables
#######################################################
vars = Variables()
vars.AddVariables(
    PathVariable('YOCTO_SDK_PATH', 'Base directory of the Yocto based SDK to use.', None)
)
vars.Update(env)
Help(vars.GenerateHelpText(env))

#######################################################
# Cross compile setup
#######################################################
if 'YOCTO_SDK_PATH' not in env or not os.path.exists(env['YOCTO_SDK_PATH']):
    print('*** Invalid YOCTO_SDK_PATH: %s' % env.get('YOCTO_SDK_PATH', '<none>'))
    Exit(1)

scripts = [ s for s in os.listdir(env['YOCTO_SDK_PATH']) if s.startswith('environment-setup') ]
if len(scripts) != 1:
    print('*** Could not determine Yocto environment setup script')
    Exit(1)

yocto_setup_script_path = os.path.join(env['YOCTO_SDK_PATH'], scripts[0])

tb = subprocess.Popen([ '/usr/bin/bash',
                        '-c',
                        'source %s && env' % yocto_setup_script_path ],
                      stdout = subprocess.PIPE,
                      stderr = subprocess.PIPE,
                      universal_newlines = True)
stdoutdata, stderrdata = tb.communicate()

# Update os.environ with the Yocto environment variables for processing below.
yocto_environ = dict([ map(string.strip, line.split('=', 1))
                       for line in stdoutdata.split('\n')
                       if '=' in line ])

# Update the SCons environment with cross-compiler information.
env.Replace(CC = yocto_environ['CC'],
            CXX = yocto_environ['CXX'],
            LINK = yocto_environ['CXX'],
            AR = yocto_environ['AR'],
            RANLIB = yocto_environ['RANLIB'],
            CCFLAGS = yocto_environ['CXXFLAGS'].split(),  #  FIXME: Is this right???
            LINKFLAGS = yocto_environ['LDFLAGS'].split())
env['ENV']['STAGING_DIR'] = yocto_environ.get('STAGING_DIR', '')
env['ENV']['PATH'] = ':'.join([ yocto_environ['PATH'], env['ENV']['PATH'] ] )
